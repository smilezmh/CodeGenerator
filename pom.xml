<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.9.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>cmtech.soft</groupId>
    <artifactId>equipment</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>equipment</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
        <activiti-version>7.1.0.M1</activiti-version>
        <druid-version>1.1.20</druid-version>
        <log4j-version>1.2.17</log4j-version>
        <swagger-version>2.9.2</swagger-version>
        <mybatisPlus-version>3.2.0</mybatisPlus-version>
        <mybatisPlusGenerator-version>3.2.0</mybatisPlusGenerator-version>
        <freemarker-version>2.3.29</freemarker-version>
        <btl-version>3.0.16.RELEASE</btl-version>
        <fastjson-verion>1.2.62</fastjson-verion>
        <spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>
        <mavenCompilePlungin-version>3.3</mavenCompilePlungin-version>
        <ews-version>2.0</ews-version>
        <activiti-image-version>6.0.0</activiti-image-version>
        <spring-cloud-config-client-version>2.1.9.RELEASE</spring-cloud-config-client-version>
        <java-persistence-version>2.2</java-persistence-version>
        <spring.boot.admin.version>2.1.5</spring.boot.admin.version>
        <docker.image.prefix>cmmes</docker.image.prefix>
        <ssh2.version>build212-hudson-6</ssh2.version>
        <skipTests>true</skipTests>
        <myBatis.plus.dynmic.version>2.5.7</myBatis.plus.dynmic.version>
        <sqlserver.version>4.0</sqlserver.version>
        <linq.version>3.1.0</linq.version>
        <diboot.version>2.0.3</diboot.version>
        <easyexcel.version>2.2.2</easyexcel.version>
        <docker.image.prefix>test</docker.image.prefix>
        <docker.name>k8s_equipment</docker.name>
        <docker.version>1.5.9</docker.version>
        <docker.host>localhost</docker.host>
        <docker.registry>hub.cmtech-soft.com</docker.registry>
        <docker.serverId>harbor</docker.serverId>
        <diboot.version>2.0.5</diboot.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!--选择log4j记录日志过滤掉这些自带日志-->
            <!--            <exclusions>-->
            <!--                <exclusion>-->
            <!--                    <groupId>org.springframework.boot</groupId>-->
            <!--                    <artifactId>spring-boot-starter-logging</artifactId>-->
            <!--                </exclusion>-->
            <!--            </exclusions>-->
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>
        <!--springboot日志-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>

        <!--spring-boot-admin -->
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
            <version>${spring.boot.admin.version}</version>
        </dependency>

        <!--consul-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-consul-discovery</artifactId>
        </dependency>
        <!-- 服务发现 健康检查 actuator-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!--activiti7相关依赖-->
        <!--        <dependency>-->
        <!--            <groupId>org.activiti</groupId>-->
        <!--            <artifactId>activiti-spring-boot-starter</artifactId>-->
        <!--            <version>${activiti-version}</version>-->
        <!--            &lt;!&ndash;需要排除mybatis依赖，否则会和mybatis plus orm冲突&ndash;&gt;-->
        <!--            <exclusions>-->
        <!--                <exclusion>-->
        <!--                    <groupId>org.mybatis</groupId>-->
        <!--                    <artifactId>mybatis</artifactId>-->
        <!--                </exclusion>-->
        <!--            </exclusions>-->
        <!--        </dependency>-->
        <!--swagger依赖-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${swagger-version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${swagger-version}</version>
        </dependency>

        <dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-image-generator</artifactId>
            <version>${activiti-image-version}</version>
        </dependency>

        <dependency>
            <groupId>org.activiti</groupId>
            <artifactId>editor-image-generator</artifactId>
            <version>${activiti-image-version}</version>
        </dependency>

        <!--mysql依赖-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!--sqlserver数据源-->
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>sqljdbc4</artifactId>
            <version>${sqlserver.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- mybatisplus动态数据源-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>dynamic-datasource-spring-boot-starter</artifactId>
            <version>${myBatis.plus.dynmic.version}</version>
        </dependency>

        <!-- 阿里巴巴druid连接池 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${druid-version}</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>easyexcel</artifactId>
            <version>${easyexcel.version}</version>
        </dependency>

        <!-- log4j，和driud结合不加入会报错 -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j-version}</version>
        </dependency>
        <!--选择log4j记录日志,需要排除spring boot自带日志-->
        <!--        <dependency>-->
        <!--            <groupId>org.springframework.boot</groupId>-->
        <!--            <artifactId>spring-boot-starter-log4j</artifactId>-->
        <!--            <version>1.3.8.RELEASE</version>-->
        <!--        </dependency>-->

        <!--mybatisplus相关依赖-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>${mybatisPlus-version}</version>
        </dependency>
        <!--mybatisplus generator相关依赖-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-generator</artifactId>
            <version>${mybatisPlusGenerator-version}</version>
        </dependency>
        <!--freemarker依赖,配合mybatis plus ,用来做模版引擎，模版存放在templates文件夹下-->
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>${freemarker-version}</version>
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>com.ibeetl</groupId>-->
        <!--            <artifactId>beetl</artifactId>-->
        <!--            <version>${btl-version}</version>-->
        <!--        </dependency>-->
        <!--lombok依赖,配合mybatis plus entity层使用-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <!--entity中出现结果列使用-->
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>javax.persistence-api</artifactId>
            <version>${java-persistence-version}</version>
        </dependency>
        <!--aop依赖-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
        </dependency>

        <!--json工具类依赖-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson-verion}</version>
        </dependency>

        <!--exchange邮件推送-->
        <dependency>
            <groupId>com.microsoft.ews-java-api</groupId>
            <artifactId>ews-java-api</artifactId>
            <version>${ews-version}</version>
        </dependency>
        <!--ssh2-->
        <dependency>
            <groupId>org.jvnet.hudson</groupId>
            <artifactId>trilead-ssh2</artifactId>
            <version>${ssh2.version}</version>
        </dependency>

        <!-- spring boot redis -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <!-- lettuce pool -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
        </dependency>
        <!-- rabbitmq -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
        <!--feign,使用feign必须注册到consul-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
        <!--zuul,使用feign必须同zuul依赖一同使用-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-zuul</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/net.sf.json-lib/json-lib -->
        <!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>2.4</version>
            <classifier>jdk15</classifier>
        </dependency>
        <!-- diboot补充mybatis plus-->
        <dependency>
            <groupId>com.diboot</groupId>
            <artifactId>diboot-core-spring-boot-starter</artifactId>
            <version>${diboot.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.baomidou</groupId>
                    <artifactId>mybatis-plus-boot-starter</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-web</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.alibaba</groupId>
                    <artifactId>fastjson</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--热启动-->
        <!--        <dependency>-->
        <!--            <groupId>org.springframework.boot</groupId>-->
        <!--            <artifactId>spring-boot-devtools</artifactId>-->
        <!--            <optional>true</optional>-->
        <!--        </dependency>-->
        <!--java linq-->
        <dependency>
            <groupId>com.bestvike</groupId>
            <artifactId>linq</artifactId>
            <version>${linq.version}</version>
        </dependency>
    </dependencies>

    <!--srping cloud-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${mavenCompilePlungin-version}</version>
            </plugin>
            <!-- Docker maven plugin -->
            <!-- Docker maven plugin -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.2.0</version>
<!--                <executions>-->
<!--                    &lt;!&ndash;执行 mvn package 时 自动 执行 mvn docker:build&ndash;&gt;-->
<!--                    <execution>-->
<!--                        <id>build-image</id>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>build</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
                <configuration>
                    <pushImage>true</pushImage>
                    <!-- 私有仓库配置，需要settings.xml文件配合serverId对应的服务地址 -->
                    <serverId>${docker.serverId}</serverId>
                    <!-- docker私服地址 -->
                    <registryUrl>${docker.registry}</registryUrl>
                    <imageName>${docker.registry}/${docker.image.prefix}/${docker.name}:${docker.version}</imageName>
                    <dockerDirectory>src/main/docker</dockerDirectory>
                    <!-- 指定docker server的地址，该配置不需要本机安装docker -->
                    <!-- <dockerHost>${docker.host}</dockerHost>-->
                    <imageTags>
                        <imageTag>${docker.version}</imageTag>
                    </imageTags>
                    <!--覆盖已存在的标签 镜像-->
                    <forceTags>true</forceTags>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>

            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/mapper/*.xml</include>
                </includes>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

    <repositories>
        <repository>
            <id>aliyun-repos</id>
            <name>aliyun</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>alfresco</id>
            <name>Activiti Releases</name>
            <url>https://artifacts.alfresco.com/nexus/content/repositories/activiti-releases/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>

</project>
